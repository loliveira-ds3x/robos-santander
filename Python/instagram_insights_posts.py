# -*- coding: utf-8 -*-
"""instagram_insights_posts.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V4oxWccyEA2YFHJljERmSw9hT-w0o2qv
"""

import pandas as pd
from datetime import datetime
import requests
import numpy as np

my_app_id = '846087082604504'
my_app_secret = 'be005765b88d863c474a846a8fdd7df3'
my_access_token = 'EAAMBgwAB99gBAMRwUIti029ZAHX0rENDiN3n0ZCEKAES1HgVDOjYpSQkPiVkGZCdoAXYOAwX3j7yWYCZBhoV222KOHrL16CWLhoexgvYK9WzXEK5gqqgIp8X7DlAg2vazx9DOSG7J7eFM5rewMXAcn6NwbqBl5dIqsZAsrNPtpwZDZD'

accounts_infos = requests.get('https://graph.facebook.com/v9.0/me/accounts?fields=name,username,access_token&limit=1000&access_token='+my_access_token).json()['data']
df_accounts_infos = pd.json_normalize(accounts_infos)
df_accounts_infos.rename(columns = {'name':'page_name'},inplace=True)
df_accounts_infos.rename(columns = {'id':'page_id'},inplace=True)
df_accounts_infos = df_accounts_infos.loc[df_accounts_infos['page_id'] != '442659496581990']

post_table_list = []
for page_id,username in zip(df_accounts_infos['page_id'],df_accounts_infos['username']):
  ig_page_id = requests.get('https://graph.facebook.com/v9.0/'+page_id+'?fields=instagram_business_account&access_token='+my_access_token).json()['instagram_business_account']['id']
  page_infos = requests.get('https://graph.facebook.com/v9.0/'+ig_page_id+'/media?fields=id,timestamp,media_type,caption,media_url,permalink&limit=1000&access_token='+my_access_token).json()['data']
  for post in range(len(page_infos)):
    id = page_infos[post]['id']
    post_id = {'post_id': [id]}
    post_table = pd.DataFrame(data=post_id)
    post_table['fb_business_id'] = page_id
    post_table['ig_business_id'] = ig_page_id
    post_table['username'] = username
    post_table_list.append(post_table)
post_table_list = pd.concat(post_table_list)

post_values_list = []
post_infos_list = []
for post_id in post_table_list['post_id']:
    try:
      post_insights = requests.get('https://graph.facebook.com/v9.0/'+post_id+'/insights?metric=impressions,reach,engagement,saved,video_views&access_token='+my_access_token).json()['data']
      for dimensions in range(len(post_insights)):
        df = pd.json_normalize(post_insights[dimensions]['values'])
        df['dimension'] = post_insights[dimensions]['name']
        df['post_id'] = post_id
        post_values_list.append(df)
      post_infos = requests.get('https://graph.facebook.com/v9.0/'+post_id+'?fields=id,timestamp,caption,media_url,permalink,media_type&access_token='+my_access_token).json()
      df_post_infos = pd.json_normalize(post_infos)
      post_infos_list.append(df_post_infos)

    except:
      pass
post_values_list = pd.concat(post_values_list)
post_infos_list = pd.concat(post_infos_list)

post_infos_list.columns = ['post_id','creation_time','caption','media_url','post_url','media_type']

final_table = post_table_list.merge(post_values_list,left_on='post_id',right_on='post_id',how='inner')
final_table = pd.pivot_table(final_table,index=['fb_business_id','ig_business_id','post_id','username'],columns='dimension',values='value', aggfunc=np.max, fill_value=0)
final_table.reset_index(inplace=True)
final_table = final_table.merge(post_infos_list,left_on='post_id',right_on='post_id',how='inner')

selected_columns = ['media_type','username','fb_business_id','ig_business_id','post_id','creation_time','caption','media_url','post_url','engagement','impressions','reach','saved','video_views']
final_table_ig = final_table[selected_columns]
final_table_ig.to_csv('instagram_insights_posts.csv',sep='|')